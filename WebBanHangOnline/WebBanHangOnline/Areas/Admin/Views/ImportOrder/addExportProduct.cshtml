@model WebBanHangOnline.Models.EF.ImportOrderDetail

@{
    ViewBag.Title = "Xuất hàng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home/index" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/importOrder/index" class="nav-link">Danh sách nhập hàng</a>
        </li>

        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Chi tiết phiếu nhập</a>
        </li>
    </ul>
}
<style>
    .searchContainer {
        position: relative;
    }

    .searchResult {
        position: absolute;
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1;
    }

    .searchItem {
        border-bottom: 1px solid #ddd; /* Thêm viền dưới cho mỗi phần tử */
        padding-bottom: 10px; /* Tạo khoảng cách giữa các phần tử */
        padding-top: 10px; /* Tạo khoảng cách giữa các phần tử */
        padding-left: 10px; /* Tạo khoảng cách giữa các phần tử */
    }

    .selectedItem {
        background-color: #e9e9e9;
    }

    #quantityInput {
        width: 20% !important;
    }

    .contentInsert {
        padding-top: 20px;
        border-top: solid 1px F4F6F9;
    }

    .contentLeft {
        padding: 10px;
    }
</style>

<!-- Main content -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thông tin chi tiết phiếu nhập</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">Chi tiết phiếu xuất</li>
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div>
            <div class="card-header col-5">
                <h3 class="card-title">Thông tin chi tiết phiếu xuất</h3>
            </div>
        </div>

        <div class="bs-stepper-content">
            <!-- your steps content here -->
            @using (Html.BeginForm("Add", "ImportOrder", FormMethod.Post, new { }))
            {
                @Html.AntiForgeryToken();
                @Html.ValidationSummary(true)


                <div class="row">
                    <div class="searchContainer col-3">
                    </div>
                    <div class="searchContainer col-9">
                        <input type="text" id="searchInput" placeholder="Nhập tên sản phẩm" class="form-control" />
                        <div id="searchResult" hidden="hidden" class="searchResult"></div>
                    </div>
                </div>

                <div class="row" id="logins-part" class="content" role="tabpanel" aria-labelledby="logins-part-trigger">
                    <div class="col-3 contentLeft">
                        <div class="row">
                            <h6>Tổng số lượng : </h6>
                            <b id="totalQuantitySpan"></b>
                        </div>
                        <div class="row">
                            <h6>Tổng tiền hàng nhập : </h6>
                            <b id="totalPriceSpan"></b>
                        </div>
                        <div class="row">
                            <textarea placeholder="Thêm ghi chú cho phiếu nhập" id="note" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="col-9 contentInsert">
                        <div id="searchResult" style="position: absolute; width: 100%;"></div>
                        <table class="table table-light">
                            <thead>
                                <tr>
                                    <th>Sản phẩm</th>
                                    <th>Size</th>
                                    <th>Hình ảnh</th>
                                    <th>Giá nhập</th>
                                    <th>số lượng</th>
                                    <th>Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody id="tableBody">
                            </tbody>
                        </table>

                    </div>




                </div>
                <div class="text-center">
                    <button id="confirmButton" class="btn btn-primary btn-sm"> Xác nhận nhập hàng </button>
                </div>
            }

        </div>

    </div>
    <!-- /.card -->

</section>

@section scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#searchInput').keyup(function () {
                debugger;
                var searchResult = document.getElementById('searchResult');
                searchResult.removeAttribute('hidden');
                var searchText = $(this).val();
                if (searchText.length >= 1) {
                    $.ajax({
                        type: 'GET',
                        url: '/ImportOrder/SearchProductAttribute',
                        data: { searchText: searchText },
                        success: function (data) {
                            $('#searchResult').empty();
                            $.each(data, function (index, item) {
                                var resultHtml = '<div class="searchItem" data-id="' + item.Id + '"' + item.Id + '">';
                                resultHtml += '<div style="height:70px" class="row">'
                                resultHtml += '<div class="col-3"><strong>Sản phẩm:</strong> ' + item.Title + '</div>';
                                resultHtml += '<div class="col-2"><strong>Size:</strong> ' + item.Size + '</div>';
                                resultHtml += '<div class="col-2"><strong>Số lượng: </strong> ' + item.Quantity + '</div>';
                                resultHtml += '<div class="col-2"><strong>Giá nhập: </strong> ' + item.OriginalPrice + '</div>';
                                resultHtml += '<div class="col-3"><img style="max-height:60px" src="' + item.ProductImage + '"/> </div>';
                                resultHtml += '</div> </div>';
                                $('#searchResult').append(resultHtml);
                            });


                            $('.searchItem').mouseover(function () {
                                $(this).addClass('selectedItem');
                            }).mouseout(function () {
                                $(this).removeClass('selectedItem');
                            });
                        }
                    });
                } else {
                    $('#searchResult').empty();
                }
            });

            // Xử lý sự kiện khi chọn một sản phẩm từ kết quả tìm kiếm
            $(document).on('click', '.searchItem', function () {
                debugger;
                var imageSrc = $(this).find('img').attr('src');
                //event.stopPropagation(); // Ngăn chặn sự kiện click lan ra các phần tử khác
                //event.preventDefault(); // Ngăn chặn hành vi mặc định của trình duyệt
                $('#searchResult').empty();

                var productAttributeId = $(this).data('id');
                var itemName = $(this).find('.col-3').eq(0).text().trim().split(':')[1].trim();
                var itemSize = $(this).find('div:nth-child(2)').text().split(':')[1].trim();
                var itemQuantity = 0;
                var itemPrice = $(this).find('div:nth-child(4)').text().split(':')[1].trim();
                var totalPrice = parseFloat(itemPrice) * parseInt(itemQuantity);

                var newRow = '<tr data-product-attribute-id="' + productAttributeId + '">';
                newRow += '<td>' + itemName + '</td>';
                newRow += '<td>' + itemSize + '</td>';
                newRow += '<td><img src="' + imageSrc + '" alt="Product Image" style="width:50px;height:50px;"></td>'; // Thay 'image.jpg' bằng đường dẫn ảnh thực tế
                newRow += '<td> <input type="number" value="' + itemPrice + '" min="1" id="PriceInput" class="form-control" /> </td>';
                newRow += '<td> <input type="number" value="0" min="1" id="quantityInput" class="form-control" /> </td>';
                newRow += '<td class = "totalPrice">' + totalPrice + '</td>';
                newRow += '<td><i class="fa fa-trash deleteRowIcon" aria-hidden="true"></i></td>'; // Thêm biểu tượng thùng rác
                newRow += '</tr>';

                $('#tableBody').append(newRow);
            });

            $(document).on('input', '#quantityInput', function () {
                debugger;
                var quantity = $(this).val();
                var price = $(this).closest('tr').find('td:nth-child(4) input').val();
                var totalPrice = parseFloat(price) * parseInt(quantity);
                $(this).closest('tr').find('.totalPrice').text(totalPrice);

                var totalQuantity = 0;
                var totalPrice = 0;
                $('#tableBody tr').each(function () {
                    var quantity = parseInt($(this).find('td:nth-child(5) input').val());
                    var price = parseFloat($(this).find('td:nth-child(6)').text());
                    totalQuantity += quantity;
                    totalPrice += price;

                    $('#totalQuantitySpan').text(totalQuantity);
                    $('#totalQuantitySpan').val(totalQuantity);
                    $('#totalPriceSpan').text(totalPrice);
                    $('#totalPriceSpan').val(totalPrice);
                });
            });

            $(document).on('input', '#PriceInput', function () {
                debugger;
                var price = $(this).val();
                var quantity = $(this).closest('tr').find('td:nth-child(5) input').val();
                var totalPrice = parseFloat(price) * parseInt(quantity);
                $(this).closest('tr').find('.totalPrice').text(totalPrice);

                var totalQuantity = 0;
                var totalPrice = 0;
                $('#tableBody tr').each(function () {
                    var quantity = parseInt($(this).find('td:nth-child(5) input').val());
                    var price = parseFloat($(this).find('td:nth-child(6)').text());
                    totalQuantity += quantity;
                    totalPrice += price;

                    $('#totalQuantitySpan').text(totalQuantity);
                    $('#totalQuantitySpan').val(totalQuantity);
                    $('#totalPriceSpan').text(totalPrice);
                    $('#totalPriceSpan').val(totalPrice);
                });
            });
        });

        $('#confirmButton').click(function () {
            var importOrderDetails = [];
            var note = $('#note').val();
            var importOrderId = parseInt($('#importOrderId').val());
            var totalQuantity = parseInt($('#totalQuantitySpan').val());
            var totalPrice = parseFloat($('#totalPriceSpan').val());
            debugger;
            $('#tableBody tr').each(function () {
                var productName = $(this).find('td:nth-child(1)').text();
                var size = $(this).find('td:nth-child(2)').text();
                var imageSrc = $(this).find('td:nth-child(3) img').attr('src');
                var importPrice = parseInt($(this).find('td:nth-child(4) input').val());
                var quantity = parseInt($(this).find('td:nth-child(5) input').val());
                var totalPrice = parseFloat($(this).find('td:nth-child(6)').text());
                var productAttributeId = parseInt($(this).attr('data-product-attribute-id')); // Chỉnh sửa để lấy Id của productAttribute

                // Thêm dữ liệu vào mảng importOrderDetails
                importOrderDetails.push({
                    ProductName: productName + " / " + size,
                    ProductAttributeId: productAttributeId,
                    Quantity: quantity,
                    TotalPrice: totalPrice,
                    ImportPrice: importPrice,
                    ImportOrderId: 1 // Chỉnh sửa để gán Id của đơn đặt hàng nhập tương ứng
                });
            });

            // Gửi dữ liệu đi
            $.ajax({
                type: 'POST',
                url: '/ImportOrder/addExportProduct', // Đường dẫn đến phương thức xử lý phía máy chủ
                data: { importOrderDetails: importOrderDetails, note: note, totalQuantity: totalQuantity, totalPrice: totalPrice }, // Dữ liệu gửi đi
                success: function (response) {
                    // Xử lý phản hồi từ máy chủ
                    if (response.success) {
                        // Hiển thị thông báo thành công
                        alert(response.message);
                        // Chuyển hướng đến trang Index của ImportOrderController sau khi thêm thành công
                        window.location.href = '/admin/ImportOrder/exportProduct';
                    } else {
                        // Xử lý lỗi nếu có
                        console.error(response.message);
                    }
                },
                error: function (error) {
                    // Xử lý lỗi nếu có
                    console.error(error);
                }
            });
        });

        // Xử lý sự kiện khi người dùng click vào biểu tượng thùng rác
        $(document).on('click', '.deleteRowIcon', function () {
            debugger;
            var row = $(this).closest('tr');
            var quantity = parseInt(row.find('td:eq(4) input').val());
            var price = parseFloat(row.find('td:eq(5)').text());
            var totalQuantity = parseInt($('#totalQuantitySpan').text());
            var totalPrice = parseFloat($('#totalPriceSpan').text());

            totalQuantity -= quantity;
            totalPrice -= price;

            row.remove(); // Xóa dòng trong bảng

            $('#totalQuantitySpan').text(totalQuantity);
            $('#totalPriceSpan').text(totalPrice);
        });
    </script>
}